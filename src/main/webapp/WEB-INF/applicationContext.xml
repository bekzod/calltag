<?xml  version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
                           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
                           http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <context:annotation-config />
    <context:component-scan base-package="com.calltag" />

    <bean id="jspViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/jsp/" />
        <property name="suffix" value=".jsp" />
    </bean>
    
    <bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping" />
    <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter" />
    
        
    <!-- Session Management -->
    <mvc:interceptors>
        <bean class="com.calltag.auth.SessionInterceptor" />
    </mvc:interceptors>

    
   
   <!-- Twillio SetUp -->
    <bean name="phone"
          class="com.calltag.service.Phone">
        <constructor-arg type="java.lang.String" value="ACff4df864cf3d47c5a9a14bc8181de426"/>
        <constructor-arg type="java.lang.String" value="33b7355127de2092a1273647d0f90a34"/>
        <constructor-arg type="java.lang.String" value="442003331641"/>
    </bean>
    
    
                  
    <!-- Twitter SetUp -->
    <bean name="twitterConf"
          class="twitter4j.conf.PropertyConfiguration"/>
    <bean id="listener"
          class="com.calltag.service.TwitterListener"/>
    <bean name="twitterFactory"
          class="twitter4j.TwitterFactory">
          <constructor-arg type="twitter4j.conf.Configuration" ref="twitterConf"/>
    </bean>
    <bean name="twitterStreamFactory"
          class="twitter4j.TwitterStreamFactory">
        <constructor-arg type="twitter4j.conf.Configuration" ref="twitterConf"/>
    </bean>
    <bean name="mainTwitter"
          class="twitter4j.Twitter"
          factory-bean="twitterFactory"
          factory-method="getInstance">
    </bean>
        
     <!--User--> 
    <bean id="userService" class="com.calltag.service.UserService"/>
    <bean id="userDao" class="com.calltag.model.UserDao" />
 
     
    <!-- Database Set Up-->        
    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
           <property name="location" value="classpath:database.properties"/>
    </bean>    
    <bean id="dataSource" 
          class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="${jdbc.driverClassName}" />
        <property name="url" value="${jdbc.url}" />
        <property name="username" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />
    </bean>   

    
    
    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="mappingLocations">
            <list>
                <value>classpath:User.hbm.xml</value>
            </list>
        </property>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
                <prop key="hibernate.show_sql">true</prop>
            </props>
        </property>
    </bean>
    
    <tx:annotation-driven transaction-manager="transactionManager"/>
    <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    
</beans>
